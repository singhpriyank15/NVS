
-- Temp Table
spark.sql("create table if not exists all_all_r_all_bkp.ods_contacts_addr_t like ALL_ALL_B_USA_CRMODS.ods_contacts_addr")

--BACKUP

spark.sql("create table if not exists all_all_r_all_bkp.ods_contacts_addr_case1_4 like ALL_ALL_B_USA_CRMODS.ods_contacts_addr")
spark.sql("insert into all_all_r_all_bkp.ods_contacts_addr_case1_4 select * from ALL_ALL_B_USA_CRMODS.ods_contacts_addr")

--creating base table

spark.sql("""with upd_data as (
select id as upd_data_id,hcp_odw_id ,sf_id,mdm_addr_id,addr_odw_id from all_all_r_all_bkp.hcp_addr_cleanup_case1 bkp where address_mdm_id__c is null and address_odw__c is null and addr_sf_sf_id is not null and sf_id is not null and mdm_addr_id is not null and acc_od_account_check = true and acc_od_mdm_addr_id_check = false and acc_od_odw_id_check = false and addr_sf_odw_id_check = false and addr_mdm_addr_id_check = false),cmp_data as (
select upd.*,addr.address_odw__c,addr.id,acct.account_odw__c,addr.address_mdm_id__c from upd_Data upd left join ph_com_p_usa_veeva.address_vod__c addr on nvl(upd.addr_odw_id,'@') = nvl(addr.address_odw__c,'@') left join ph_com_p_usa_veeva.account acct on acct.id = addr.account_vod__c and acct.ispersonaccount = true and acct.isdeleted=false and acct.recordtypeid='0121O000001CG6UQAW'),evt_data as (
select e.nvs_core_address__c,count(1) as evt_count from cmp_data cda join ph_com_p_usa_veeva.em_event_vod__c e   on e.nvs_core_address__c=cda.sf_id group by e.nvs_core_address__c union select e.nvs_core_address__c,count(1) as evt_count from cmp_data cda join ph_com_p_usa_veeva.em_event_vod__c e on e.nvs_core_address__c=cda.id group by e.nvs_core_address__c ), calls_data as (
select c.parent_address_vod__c,count(1) as call_count from cmp_data cda left join ph_com_p_usa_veeva.call2_vod__c c on c.parent_address_vod__c  = cda.sf_id group by c.parent_address_vod__c union select c.parent_address_vod__c,count(1) as call_count from cmp_data cda  join ph_com_p_usa_veeva.call2_vod__c c on c.parent_address_vod__c = cda.id group by c.parent_address_vod__c),trans_data as (
select cda.* ,e.nvs_core_address__c as evt_ods_sf_id,nvl(e.evt_count,0) event_cnt_ods,e1.nvs_core_address__c as evt_veeva_sf_id,nvl(e1.evt_count,0) event_cnt_veeva,c.parent_address_vod__c as call_ods_sf_id,nvl(c.call_count,0) as call_cnt_ods,c1.parent_address_vod__c as call_veeva_sf_id,nvl(c1.call_count,0) as call_cnt_veeva from cmp_data cda left join calls_data c on c.parent_address_vod__c  = cda.sf_id left join evt_data e on e.nvs_core_address__c=cda.sf_id left join calls_data c1 on c1.parent_address_vod__c  = cda.id left join evt_data e1 on e1.nvs_core_address__c=cda.id ),final_data as (
select *,case when trim(nvl(mdm_addr_id,'@'))=trim(nvl(address_mdm_id__c,'@')) then true else false end as addr_mdm_id_check,case when trim(nvl(address_odw__c,'@'))=trim(nvl(addr_odw_id,'@')) then true else false end as addr_odw_id_check,case when trim(nvl(account_odw__c,'@'))=trim(nvl(hcp_odw_id,'@')) then true else false end as account_check,case when trim(nvl(sf_id,'@'))=trim(nvl(id,'@')) then true else false end as sf_id_check from trans_data)

 select * from final_data""")createOrReplaceTempView("final_data")


spark.sql("create table all_all_r_all_bkp.case1_4 as select * from final_data")



spark.sql("""insert into ALL_ALL_B_USA_CRMODS.ods_contacts_addr_H select mdm_valid_addr_ind,best_times,cass_certified,mdm_addr_id,dly_scrub_date,mth_scrub_date,current_timestamp,rec_insert_date,addr_post_line_2,addr_post_line_1,fax_2,fax_1,rec_modify_date,rec_insert_date,batch_id_insert,rec_insert_by,inactive,staff_notes,office_notes,lic_valid_to_sample,sample_stat,dea_auth_stat_date,dea_auth_stat,dea_sched_cls,dea_lic_addr,dea_expirn_date,dea,zip_post,zip_4_post,zip_4,zip,cntry_code,state,phone_3,phone_2,phone_1,mobile_id,email4,email3,email2,email1,contact_fax_2,contact_fax_1,city_post,city,addr_line_2,addr_line_1,src,shipping,mig_stat,mailing,include_in_terr_asgnmt,appt_reqd,cc_flag,business,billing,account,home,contact_name,edge_id,par_edge_id,sonic_id,cam_key,acct_id,cont_id,primary,physician_key,sf_owner_id,sf_is_deleted,sf_id,addr_per_id,contacts_odw_id,contacts_addr_odw_id,cnty,siebel_id,scrub_req,batch_id_update,rec_modify_by,sample_eligibility_flag,State_Distributor_License_Exempt_vod__c,nvs_core_secondary_license__c, maps, sample_send_status_vod__c, nvs_core_novartis_unique_id__c from (SELECT odscont.mobile_id, odscont.email4, odscont.email3, odscont.email2, odscont.email1, odscont.contact_fax_2, odscont.contact_fax_1, odscont.city_post, odscont.city, odscont.addr_line_2, odscont.addr_line_1, odscont.src, odscont.shipping, odscont.mig_stat, odscont.mailing, odscont.include_in_terr_asgnmt, odscont.appt_reqd, odscont.cc_flag, odscont.business, odscont.billing, odscont.account, odscont.home, odscont.contact_name, odscont.edge_id, odscont.par_edge_id, odscont.sonic_id, odscont.cam_key, odscont.acct_id, odscont.cont_id, odscont.primary, odscont.physician_key, odscont.sf_owner_id, odscont.sf_is_deleted, odscont.sf_id, odscont.addr_per_id, odscont.contacts_odw_id, odscont.contacts_addr_odw_id, odscont.mdm_valid_addr_ind, odscont.best_times, odscont.cass_certified, odscont.mdm_addr_id, odscont.dly_scrub_date, odscont.mth_scrub_date, odscont.addr_post_line_2, odscont.addr_post_line_1, odscont.fax_2, odscont.fax_1, odscont.batch_id_insert, odscont.rec_insert_by, current_timestamp rec_modify_date, odscont.rec_insert_date, odscont.inactive, odscont.staff_notes, odscont.office_notes, odscont.lic_valid_to_sample, odscont.sample_stat, odscont.dea_auth_stat_date, odscont.dea_auth_stat, odscont.dea_sched_cls, odscont.dea_lic_addr, odscont.dea_expirn_date, odscont.dea, odscont.zip_post, odscont.zip_4_post, odscont.zip_4, odscont.zip, odscont.cntry_code, odscont.state, odscont.phone_3, odscont.phone_2, odscont.phone_1, odscont.scrub_req, odscont.cnty, odscont.siebel_id, odscont.batch_id_update batch_id_update, odscont.rec_modify_by rec_modify_by, odscont.sample_eligibility_flag,odscont.State_Distributor_License_Exempt_vod__c, odscont.nvs_core_secondary_license__c, odscont.maps, odscont.sample_send_status_vod__c, odscont.nvs_core_novartis_unique_id__c FROM ALL_ALL_B_USA_CRMODS.ods_contacts_addr odscont join all_all_r_all_bkp.case1_4 bkp on trim(bkp.sf_id)=trim(odscont.sf_id) and trim(concat('CA',cast(odscont.contacts_addr_odw_id as string)))=trim(bkp.addr_odw_id) where bkp.account_check = true and bkp.addr_mdm_id_check = true and bkp.addr_odw_id_check = true and bkp.sf_id_check=false)""")

spark.sql("truncate table all_all_r_all_bkp.ods_contacts_addr_t")

spark.sql("""with data as (select mobile_id,ods.email4,ods.email3,ods.email2,ods.email1,ods.contact_fax_2,ods.contact_fax_1,ods.city_post,ods.city,ods.addr_line_2,ods.addr_line_1,ods.src,ods.shipping,ods.mig_stat,ods.mailing,ods.include_in_terr_asgnmt,ods.appt_reqd,ods.cc_flag,ods.business,ods.billing,ods.account,ods.home,ods.contact_name,ods.edge_id,ods.par_edge_id,ods.sonic_id,ods.cam_key,ods.acct_id,ods.cont_id,ods.primary,ods.physician_key,ods.sf_owner_id,ods.sf_is_deleted,bkp.id sf_id,ods.addr_per_id,ods.contacts_odw_id,ods.contacts_addr_odw_id,ods.mdm_valid_addr_ind,ods.best_times,ods.cass_certified,ods.mdm_addr_id,ods.dly_scrub_date,ods.mth_scrub_date,ods.addr_post_line_2,ods.addr_post_line_1,ods.fax_2,ods.fax_1,ods.batch_id_insert,ods.rec_insert_by,ods.rec_modify_date,ods.rec_insert_date,ods.inactive,ods.staff_notes,ods.office_notes,ods.lic_valid_to_sample,ods.sample_stat,ods.dea_auth_stat_date,ods.dea_auth_stat,ods.dea_sched_cls,ods.dea_lic_addr,ods.dea_expirn_date,ods.dea,ods.zip_post,ods.zip_4_post,ods.zip_4,ods.zip,ods.cntry_code,ods.state,ods.phone_3,ods.phone_2,ods.phone_1,ods.scrub_req,ods.cnty,ods.siebel_id,ods.batch_id_update,ods.rec_modify_by,ods.sample_eligibility_flag,ods.state_distributor_license_exempt_vod__c,ods.nvs_core_secondary_license__c,ods.maps,ods.sample_send_status_vod__c,ods.nvs_core_novartis_unique_id__c from ALL_ALL_B_USA_CRMODS.ods_contacts_addr ods join all_all_r_all_bkp.case1_4 bkp on trim(concat('CA',cast(ods.contacts_addr_odw_id as string))) = trim(bkp.addr_odw_id) and trim(bkp.sf_id)=trim(ods.sf_id) where bkp.account_check = true and bkp.addr_mdm_id_check = true and bkp.addr_odw_id_check = true and bkp.sf_id_check=false )

insert into all_all_r_all_bkp.ods_contacts_addr_t select * from data """)

spark.sql("insert into all_all_r_all_bkp.ods_contacts_addr_t select ods.* from ALL_ALL_B_USA_CRMODS.ods_contacts_addr ods left anti join (select sf_id,addr_odw_id from all_all_r_all_bkp.case1_4 where account_check = true and addr_mdm_id_check = true and addr_odw_id_check = true and sf_id_check=false) bkp on trim(concat('CA',cast(ods.contacts_addr_odw_id as string))) = trim(bkp.addr_odw_id) and trim(bkp.sf_id)=trim(ods.sf_id)")

spark.sql("truncate table ALL_ALL_B_USA_CRMODS.ods_contacts_addr")

spark.sql("insert into ALL_ALL_B_USA_CRMODS.ods_contacts_addr select * from into all_all_r_all_bkp.ods_contacts_addr_t")
